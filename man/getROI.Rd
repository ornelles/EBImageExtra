% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getROI.R
\name{getROI}
\alias{getROI}
\title{Get Region of Interest}
\usage{
getROI(img, x, y, x2, y2, w, h, markup, asCorner = FALSE,
  which.corner = c("bottomleft", "topleft", "bottomright", "topright"),
  pch = 3, col = "magenta", border = col, lwd = 2)
}
\arguments{
\item{img}{An \code{Image} object}

\item{x, y}{\code{x,y} coordinates of one or both corners of
rectangular selection \emph{or} the center of the
rectangular selection \emph{or} a list of
corners of the selection (see details in Selecting the ROI)}

\item{x2, y2}{optional second pair of x and y coordinates when
needed to specify the other corner of the rectangular selection}

\item{w, h}{optional width and height of the rectangular selection
in pixels; required if \code{x2,y2} are missing}

\item{markup}{\code{logical} value to redraw the image the selection
outlined by \code{\link{drawROI}}; if \code{missing} or \code{NULL}
\code{markup} will set to \code{TRUE} if the user interacts 
with the image and \code{FALSE} if no interaction is required}

\item{asCorner}{\code{logical} value to use the
point \code{x,y} as the corner of the selection or as the center of
the selection}

\item{which.corner}{identifies the
corner of the rectangle specified by \code{x,y};
applies only if \code{asCorner = TRUE}}

\item{pch}{plotting character used by \code{link{locator}} to
indicate mouse clicks, the default value of 3 shows a small cross}

\item{col}{color for plotting character used by \code{link{locator}};
use \code{NA} for no plotting character}

\item{border}{border color of rectangle if \code{markup = TRUE}; if not
specified, the value for \code{col} is used}

\item{lwd}{line width of rectangle if \code{markup = TRUE}}
}
\value{
The region of interest as an \code{Image} with the
added class of "\code{roi}" and the attribute "\code{loc}"
holding the location of the region of interest.
}
\description{
Get a rectangular region of interest from an image.
}
\section{Selecting the ROI}{

A rectangular region of interest (ROI) can be selected programmatically
or interactively. The ROI is defined by the position of the lower left
and upper right    coordinates of the rectangle in pixels   (actually
either pair of corners on the diagonal is adequate.) The pair of points
can be specified several means. The function will accept four values
\code{x,y}, and \code{x2,y2} or a list of the two points. Without these
arguments, the function     invokes \code{\link{locator}} to allow the
user to define the ROI. The ROI will be trimmed if necessary to the
dimensions allowed by the original image. Options allow specifying the
rectangle either by the center or corner(s) as describe below. The first
two options  require no interaction with the user and only produce an
image if \code{markup = TRUE}. Options 3 and 4 below require interaction
with the user and produce an image if \code{markup} is \code{TRUE} or
was not provided. The returned object is an image with additional
\code{class} and \code{attribute} as described in the section below.

\enumerate{
  \item{\strong{List}.} If \code{x} is a \code{list} of length 2, it
    is assumed to hold opposite corners of the rectangular selection. This
    is the typical result of a call to \code{locator(2)} after having
    plotted the image.
  \item{\strong{Two Points}.} If values are provided for each of \code{x,y} and
    \code{x2,y2}, these are treated as opposite corners of
    the rectangular selection.
  \item{\strong{One Point} (with width and height).} If only two values are
    provided for \code{x,y} and \code{x2,y2}, they will be assigned to
    \code{x,y}. In this case, values for \code{w,h} must be provided as
    named arguments for the width and height of the rectangular selection.
    The point \code{x,y} is interpreted as \emph{either} the center
    (\code{asCorner=FALSE})
    \emph{or} the corner of the selection (\code{asCorner=TRUE}). If
    \code{asCorner = TRUE}, the position of the corner is determined
    by the argument \code{which.corner} as one of \code{"bottomleft", 
    "topleft", "bottomright",} or \code{"topright"}.
  \item{\strong{No Points} (choose opposite corners).} If all of \code{x,y, x2,y2, w,h}
    are missing, \code{\link{locator}} will be called to let the user to
    select two points that define opposite corners of the rectangular selection.
}
}

\section{Class "roi" and "loc" attribute}{

\code{EBImage} uses the \code{Image} class to store and process images.
A region of interest is an \code{Image} object with the
additional class of "\code{roi}" and an additional attribute using
the \code{slot} property of \code{S4} objects. The new \code{slot} or
attribute "\code{loc}"
holds the location of the region of interest as \code{roi =
list(x = c(x,x2), y = c(y,y2))}.  The attribute \code{"loc"} can be
used to extract the equivalent region of interest from a related image
(\code{img2}) in the following manner. 
\preformatted{
 x <- getROI(img1)
 pp <- attr(x, "loc") # or x@loc or slot(ins, "loc")
 y <- getROI(img2, pp)
}
}

\examples{
# Example using fixed width and height to retrieve image
  lighthouse <- readImage(system.file("inst", "extdata", "lighthouse.jpg", package="EBImageExtra"))
  plot(lighthouse)

# Get region of interest, anchored by center
  ans1 <- getROI(lighthouse, 515, 315, w = 200, h = 150)
  print(ans1@loc) # one way to extract 'loc'

# Get region of interest, anchored by top left corner
  ans2 <- getROI(lighthouse, 515, 315, w = 200, h = 150, asCorner = TRUE)
  print(attr(ans2, "loc")) # better way of extracting 'loc'
  plotStack(combine(ans1, ans2), nx = 1)

}
\seealso{
\code{\link{putROI}} to place an ROI with scaling;
\code{\link{drawROI}} to draw a frame \emph{within} an image;
\code{\link{frameROI}} to draw a frame \emph{about} an image;
\code{\link{insertROI}} as a convenience function that
  combines calls to \code{getROI}, \code{putROI}
  and \code{drawROI} to place a framed inset in an image.
}
