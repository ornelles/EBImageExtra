% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getInset.R
\name{getInset}
\alias{getInset}
\title{Get Image Inset}
\usage{
getInset(img, x, y, x2, y2, w, h, method = c("center", "corner"),
  which.corner = c("bottomleft", "topleft", "bottomright", "topright"),
  pch = 3, col = "magenta", border = col, lwd = 2,
  newplot = TRUE, markup = TRUE)
}
\arguments{
\item{img}{An \code{Image} object}

\item{x, y}{the x and y coordinates (in pixels) of either one corner or the
center of the rectangular selection}

\item{x2, y2}{optional second pair of x and y coordinates (in pixels) to
specify the other corner of the rectangular selection}

\item{w, h}{optional width and height of the rectangular selection (in
pixels); required if (\code{x2,y2}) are missing}

\item{method}{a character vector of length 1 to specify the
location of the single \code{x,y} coordinate as either the
\code{"center"} or \code{"corner"} of the selection}

\item{which.corner}{a character vector of length 1 indicating which
corner of the rectangular selection is specified by the single \code{x,y}
coordinate; applies only if \code{method = "corner"}}

\item{pch}{plotting character used by \code{locator}, default of 3 (cross)}

\item{col}{color for plotting character used by \code{locator}, default of
\code{"magenta"}; use \code{NA} for no plotting character}

\item{border}{border color of rectangle if \code{markup = TRUE}; if not
specified, the value for \code{col} is used}

\item{lwd}{line width of rectangle if \code{markup = TRUE}}

\item{newplot}{\code{logical} value indicating if a new image should be
plotted first}

\item{markup}{\code{logical} value indicating if the inset outline should be
drawn on the image}
}
\value{
An \code{Image} object corresponding to the cropped image representing
the selected inset.
}
\description{
Select and extract a rectangular inset from an image.
}
\details{
This allows extraction of a rectangular image inset by either specifying
coordinates that define the rectangle or by invoking \code{\link{locator}}
to allow the user to interactively select the inset. The \code{Image} inset
will be trimmed to the dimensions allowed by the original image and
invisibly returned. Options allow specifying the rectangle either by the
center or corner(s) as describe below. 

\describe{
  \item{Two Points}{If values are provided for each of \code{x,y} and
    \code{x2,y2}, these are treated as opposite corners of
    the rectangular selection.}
  \item{One Point (with width and height)}{If only two values are provided for
   \code{x,y} and \code{x2,y2}, they will be assigned to \code{x,y}. Values
   for \code{w,h} must be provided as named arguments as the width and
   height of the rectangular selection. The point \code{x,y} is
   interpretted as \emph{either} the center (\code{method="center"})
   \emph{or} the corner (\code{method="corner"}) of the selection. If
   \code{method="corner"} applies, the position of the corner is determined
   by the argument \code{which.corner} as one of \code{"bottomleft", 
   "topleft", "bottomright",} or \code{"topright"}.}
  \item{No Points (choose opposite corners)}{If all of \code{x,y,x2,y2,w,h}
   are missing, \code{locator} will allow the user to select two points
   that define opposing corners of the rectangular selection.}
}
}
\examples{
# example from EBImage package
  birds <- readImage(system.file("images", "sample-color.png", package="EBImage"))
# Use fixed width and height
  w <- 200
  h <- 240
# Example specifying one point for center with width and height
  ins1 <- getInset(birds, 160, 255, w = w, h = h)
  ins2 <- getInset(birds, 480, 200, w = w, h = h, newplot = FALSE)
# Show insets as a combined image
  plotStack(combine(ins1, ins2))

}
\seealso{
addInset; other stuff
}
