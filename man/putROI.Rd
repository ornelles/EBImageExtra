% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/putROI.R
\name{putROI}
\alias{putROI}
\title{Put an Image (ROI) into Another Image}
\usage{
putROI(img, roi, position, show, frac = NULL, mag = NULL,
  frac.default = 1/3, lwd = 2, col = "white")
}
\arguments{
\item{img}{the larger \code{Image} object to receive the roi;
this can be an \code{Image} object or a path
(as a \code{character} vector) to such the image}

\item{roi}{the smaller \code{Image} object to be placed in the
\code{Image} object "\code{img}"}

\item{position}{a \code{character} string or \code{integer}
in 1 to 9 indicating the position of the inset; If \code{missing},
\code{\link{locator}} will be called to interact with the
user to place the inset; see Details}

\item{show}{\code{logical} value indicated whether to show the 
image with inset}

\item{frac}{a \code{numeric} value between 0 and 1 for the fractional
width occupied by the inset; the default values of \code{NULL} uses the 
value in \code{frac.default}}

\item{mag}{optional magnification factor for inset; if \code{NULL}
(default), it will be determined by \code{frac}}

\item{frac.default}{default fractional width for the inset (\code{1/3})}

\item{lwd}{width of the inset border in pixels; note that this is
\strong{not} the standard definition of \code{lwd}}

\item{col}{color of the inset border}
}
\value{
An \code{Image} of the same dimensions as the second argument
(\code{img}) with \code{roi} inserted after appropriate scaling and
otional framing.
}
\description{
Place a scaled image into another image as an optionally framed inset
}
\details{
The image to be placed as an inset (\code{roi}) will be scaled 
and placed in \code{img} at the location specified by \code{position}. 
This argument can be one of "topleft", "top", "topright", "left", 
"center", "right", "bottomleft", "bottom", and "bottomright". The code 
will also accept the integers 1 to 9 corresponding to these
respective positions. If \code{position} is missing,
\code{\link{locator}} will be called to determine where (among the
nine choices) to place the inset. 

The image will be scaled according to either \code{frac} or \code{mag} 
where \code{frac} indicates the fractional width of the image to be 
occupied by the scaled inset. Alternatively, the magnification can be 
specified with \code{mag}, typically a number greater than 1. Values that
create an inset greater than the dimensions of the \code{img} argument 
will cause an error. 

If \code{show = TRUE} or if \code{show} is missing and \code{locator} 
was used to place the inset, the image with inset will be plotted. In all
cases, the modified image will be invisibly returned.
}
\examples{
# Sample color image
  lighthouse <- readImage(system.file("extdata", "lighthouse.jpg", package="EBImageExtra"))

# Get region of interest of fixed width and height, specified by center
  ins <- getROI(lighthouse, 515, 280, w = 180, h = 280)
  putROI(lighthouse, ins, "topright", show = TRUE)

# Display the 9 possible positions
  img <- resize(lighthouse, w = 256)
  ins2 <- resize(ins, w = 45)
  z <- lapply(1:9, function(i) putROI(imge, ins2, i, lwd  = 4))
# z <- combine(z) # about 5-times slower than directly calling 'abind'
  z <- do.call(abind, c(z, list(along = 4)))
  plot(z, all = TRUE)
  labelStack(z, all = TRUE)
  plotStack(combine(z), nx = 3, labels = TRUE, cex = 1.5)

}
\seealso{
\code{\link{getROI}} to get a region of interest from an image;
\code{\link{drawROI}} to draw a frame \emph{within} an image;
\code{\link{insertROI}} as a convenience function that
  combines calls to \code{getROI}, \code{putROI}
  and \code{drawROI} to place a framed inset in an image.
}
